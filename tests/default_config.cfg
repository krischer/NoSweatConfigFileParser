# A valid configuration pair consists of a type identifier, a name, an
# assignment operator (= or :) and a value:
#
# int/float/string/bool value_name {= or :} default_value
#
# One configuration pair must always be defined on the same line. Everything
# that does not follow this syntax will be silently ignored.

[basic config group]
int max_number_of_users = 1
float movement_speed = 12.34
string username = some_user
bool use_accelerator = true

[different ways to specify booleans]
bool is_true = true
# The value is case insensitive
bool is_false = FaLse
bool is_also_false = 0
bool this_one_is_true = 1
bool also_true = yes
bool value_is_false = no
bool on_off_true = on
bool on_off_false = OFF

[some more stuff]
string key names can have spaces:everything after the assignment operator will be the value
# This will work, because std::stof can handle it
float speed=1
int $uper awesome names are also quite poss!!ble = 1
# Extraneous whitespaces (except newline) do not matter, although for the users own sanity,
# a clean syntax is preferable.
    float     high_prec_interval=        0.00002

[things that will be silently ignored]
# Incomplete
bool boolean=
# The next line will be ignored, because hjkl cannot be converted to an integer.
int asdf=hjkl
string this is not very valid my dear.
# This key has been specified before and only the very first occurrence of a key
# will be used
float speed=1.23
